/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practica8salacura;

import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author usuario
 */
public class Practica8CentroSalud extends javax.swing.JFrame {

    /**
     * Creates new form Practica8CentroSalud
     */
    public Practica8CentroSalud() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {

        Practica8CentroSalud f = new Practica8CentroSalud();
         CanvasCentroSalud canvas = new CanvasCentroSalud(900,600);
        f.setSize(900, 600);
        f.add(canvas);
        f.setVisible(true);
        CentroSalud cs = new CentroSalud(canvas);
        Thread[] pacientes = new Thread[50];
        Limpiador limpiador;
        PInfeccion PacienteI;
        Random rnd = new Random();
        rnd.setSeed(System.currentTimeMillis());
        try {
            limpiador=new Limpiador(cs,0);
             pacientes[0] = new Thread(limpiador);
            pacientes[0].start();
            for (int i = 1; i < 50; i++) {
                if (rnd.nextInt(100) < 75) {
                    pacientes[i] = new PNormal(cs,i);
                    pacientes[i].start();
                } else {
                    PacienteI = new PInfeccion(cs,i);
                    pacientes[i] = new Thread(PacienteI);
                    pacientes[i].start();
                }
                Thread.sleep((rnd.nextInt(2) + 1) * 500);
            }
            
            for (int i = 0; i < 50; i++) {
                pacientes[i].join();
            }
            Thread.sleep(2000);
            System.exit(0);
        } catch (InterruptedException ex) {
            Logger.getLogger(Practica8CentroSalud.class.getName()).log(Level.SEVERE, null, ex);

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
